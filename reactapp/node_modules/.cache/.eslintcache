[{"C:\\Users\\User\\Documents\\React-Apps\\reactapp\\src\\index.js":"1","C:\\Users\\User\\Documents\\React-Apps\\reactapp\\src\\App.js":"2","C:\\Users\\User\\Documents\\React-Apps\\reactapp\\src\\pages\\homepage.js":"3","C:\\Users\\User\\Documents\\React-Apps\\reactapp\\src\\navbar.js":"4","C:\\Users\\User\\Documents\\React-Apps\\reactapp\\src\\pages\\auth\\login.js":"5","C:\\Users\\User\\Documents\\React-Apps\\reactapp\\src\\pages\\about\\about.js":"6","C:\\Users\\User\\Documents\\React-Apps\\reactapp\\src\\redux\\reducer.js":"7","C:\\Users\\User\\Documents\\React-Apps\\reactapp\\src\\redux\\actions.js":"8","C:\\Users\\User\\Documents\\React-Apps\\reactapp\\src\\pages\\tests\\tests.js":"9","C:\\Users\\User\\Documents\\React-Apps\\reactapp\\src\\pages\\tests\\testsolver.js":"10","C:\\Users\\User\\Documents\\React-Apps\\reactapp\\src\\pages\\tests\\grades.js":"11"},{"size":749,"mtime":1687449475030,"results":"12","hashOfConfig":"13"},{"size":1318,"mtime":1688819744300,"results":"14","hashOfConfig":"13"},{"size":109,"mtime":1687380159195,"results":"15","hashOfConfig":"13"},{"size":1783,"mtime":1688819825114,"results":"16","hashOfConfig":"13"},{"size":3314,"mtime":1688819541629,"results":"17","hashOfConfig":"13"},{"size":67,"mtime":1687382456720,"results":"18","hashOfConfig":"13"},{"size":721,"mtime":1687529184405,"results":"19","hashOfConfig":"13"},{"size":292,"mtime":1687466170719,"results":"20","hashOfConfig":"13"},{"size":1705,"mtime":1687529714906,"results":"21","hashOfConfig":"13"},{"size":4762,"mtime":1687551079886,"results":"22","hashOfConfig":"13"},{"size":1090,"mtime":1687555154152,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1khwem5",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"27"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"27"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"27"},"C:\\Users\\User\\Documents\\React-Apps\\reactapp\\src\\index.js",[],[],[],"C:\\Users\\User\\Documents\\React-Apps\\reactapp\\src\\App.js",[],[],"C:\\Users\\User\\Documents\\React-Apps\\reactapp\\src\\pages\\homepage.js",[],[],"C:\\Users\\User\\Documents\\React-Apps\\reactapp\\src\\navbar.js",[],[],"C:\\Users\\User\\Documents\\React-Apps\\reactapp\\src\\pages\\auth\\login.js",["61"],[],"C:\\Users\\User\\Documents\\React-Apps\\reactapp\\src\\pages\\about\\about.js",[],[],"C:\\Users\\User\\Documents\\React-Apps\\reactapp\\src\\redux\\reducer.js",[],[],"C:\\Users\\User\\Documents\\React-Apps\\reactapp\\src\\redux\\actions.js",[],[],"C:\\Users\\User\\Documents\\React-Apps\\reactapp\\src\\pages\\tests\\tests.js",["62"],[],"import { Link, Navigate, createSearchParams } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./tests.css\";\r\n\r\nfunction Tests() {\r\n  const [tests, setTests] = useState([]);\r\n  const loggedIn = useSelector((state) => state.login);\r\n  const userClass = useSelector((state) => state.class.class);\r\n  \r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/tests\");\r\n      if (!response.ok) {\r\n        console.error(\"Error fetching data\");\r\n      } else {\r\n        const data = await response.json();\r\n        setTests(data);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  if (!loggedIn) return <Navigate to=\"/\" />;\r\n  if (loggedIn === \"TEACHER\") return <Navigate to=\"/\" />;\r\n  if (!tests) return <>Zəhmət Olmasa Gözləyin</>;\r\n\r\n  // Filter tests based on the user's class\r\n  const filteredTests = tests.filter((test) => test.CLASS === userClass);\r\n\r\n  return (\r\n    <div className=\"grid-container\">\r\n      <div className=\"grid\">\r\n        {filteredTests.map((test) => (\r\n          <Link\r\n            key={test.id}\r\n            to={{\r\n              pathname: \"/testsolver\",\r\n              search: createSearchParams({\r\n                id: test.id,\r\n              }).toString(),\r\n            }}\r\n            className=\"card-button\"\r\n          >\r\n            <div className=\"card-content\">\r\n              <h3>{test.TESTNAME}</h3>\r\n              <p>{test.CLASS}</p>\r\n            </div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tests;\r\n","C:\\Users\\User\\Documents\\React-Apps\\reactapp\\src\\pages\\tests\\testsolver.js",["63","64","65","66","67","68","69","70","71"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Navigate, useSearchParams } from \"react-router-dom\";\r\nimport \"./testsolver.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Testsolver() {\r\n  const [searchParams] = useSearchParams();\r\n  const [test, setTest] = useState();\r\n  const [answers, setAnswers] = useState([]);\r\n  const [result, setResult] = useState([]);\r\n  const [canWork,setWork] = useState(true)\r\n  const [isworked,setworked] = useState(1000)\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [totalScore, setTotalScore] = useState(1000);\r\n  const utis = localStorage.getItem(\"UTIS\")\r\n  const classs = localStorage.getItem(\"class\")\r\n\r\n  useEffect(() => {\r\n      const fetchData = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                \"http://localhost:8000/isvalid/\"+utis+\"/\"+ searchParams.get(\"id\")\r\n                );\r\n                if (response.status != 201) {\r\n                    const data =await response.json()\r\n                    setworked(data)      \r\n                }\r\n            } \r\n            catch(error){}\r\n          try {\r\n              const response = await fetch(\r\n                  \"http://localhost:8000/tests/\" + searchParams.get(\"id\")\r\n                  );\r\n                  if (!response.ok) {\r\n                      console.error(\"Error fetching data\");\r\n                    } else {\r\n                        const data = await response.json();\r\n                        setTest(data);\r\n                        setAnswers(Array(data.QUESTIONS.length).fill(null));\r\n                        if(data.CLASS != classs){\r\n                            setWork(false)\r\n                        }\r\n                        \r\n \r\n            }\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n};\r\n\r\nfetchData();\r\n}, []);\r\n\r\n  const handleAnswerChange = (questionIndex, answerIndex) => {\r\n    if (!submitted) {\r\n      setAnswers((prevAnswers) => {\r\n        const updatedAnswers = [...prevAnswers];\r\n        updatedAnswers[questionIndex] = answerIndex;\r\n        return updatedAnswers;\r\n      });\r\n    }\r\n  };\r\n\r\n  // ...Other code...\r\n\r\nconst handleSubmit = async () => {\r\n    setTotalScore(0)\r\n    const resultArray = test.QUESTIONS.map((question, questionIndex) => {\r\n      const selectedAnswerIndex = answers[questionIndex];\r\n      const correctAnswerIndex = parseInt(question.RIGHTANSWER) - 1;\r\n      const isCorrect = selectedAnswerIndex === correctAnswerIndex;\r\n      const score = isCorrect ? question.SCORE : 0;\r\n      setTotalScore(scoree => scoree + score);\r\n      return { isCorrect, score };\r\n    });\r\n    setResult(resultArray);\r\n    setSubmitted(true);\r\n};\r\n\r\nuseEffect(() => {\r\n    if(totalScore!=1000){\r\n        const res =  fetch(\"http://localhost:8000/validate/\"+utis+\"/\"+searchParams.get(\"id\")+\"/\"+totalScore);\r\n        console.log(\"http://localhost:8000/validate/\"+utis+\"/\"+searchParams.get(\"id\")+\"/\"+totalScore);\r\n    }\r\n  }, [totalScore]);\r\n  \r\n  // ...Other code...\r\n  \r\n  \r\n  if(!canWork){\r\n    return <Navigate to=\"/\"/>\r\n  }\r\n\r\n  if (!test && isworked) {\r\n    return <>Loading....</>;\r\n  }\r\n  if (isworked !=1000) {\r\n    return <>Bu testi yerinə yetirmisiniz.Aldığınız bal : {isworked}</>;\r\n  }\r\n    return (\r\n    <div className=\"container\">\r\n      <h2>{test.TESTNAME}</h2>\r\n      <h3>Suallar:</h3>\r\n\r\n      {test.QUESTIONS.map((question, questionIndex) => (\r\n        <div key={questionIndex} className=\"question\">\r\n          <p>{question.QUESTION} (Bal:{question.SCORE})</p>\r\n          <ul className=\"answers\">\r\n            {question.ANSWERS.map((answer, answerIndex) => (\r\n              <li\r\n                key={answerIndex}\r\n                className={`answer ${submitted ? \"disabled\" : \"\"}`}\r\n                onClick={() => handleAnswerChange(questionIndex, answerIndex)}\r\n              >\r\n                <input\r\n                  type={question.TYPE === \"multiAnswered\" ? \"checkbox\" : \"radio\"}\r\n                  name={`question-${questionIndex}`}\r\n                  id={`question-${questionIndex}-answer-${answerIndex}`}\r\n                  checked={answers[questionIndex] === answerIndex}\r\n                  disabled={submitted}\r\n                  onChange={() => {}}\r\n                />\r\n                <label htmlFor={`question-${questionIndex}-answer-${answerIndex}`}>\r\n                  {answer}\r\n                </label>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ))}\r\n\r\n      <button className=\"submit-btn\" onClick={handleSubmit} disabled={submitted}>\r\n        Bitir\r\n      </button>\r\n\r\n      {submitted && (\r\n        <div className=\"feedback\">\r\n          <p>Total Score: {totalScore}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Testsolver;\r\n","C:\\Users\\User\\Documents\\React-Apps\\reactapp\\src\\pages\\tests\\grades.js",["72","73"],[],"import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./grades.css\";\r\n\r\nfunction Grades() {\r\n  const [grades, setGrades] = useState([]);\r\n  const utis = localStorage.getItem(\"UTIS\");\r\n\r\n  useEffect(() => {\r\n    const fetchGrades = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:8000/gradesof/\" + utis);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setGrades(data);\r\n          localStorage.setItem(\"grades\", JSON.stringify(data));\r\n        } else {\r\n          console.error(\"Error fetching grades\");\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    fetchGrades();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"grades-container\">\r\n      {grades.map((grade, index) => (\r\n        <div key={index} className=\"grade-card\">\r\n          <h3 className=\"test-name\">Testin adı: {grade.testName}</h3>\r\n          <p className=\"result\">Nəticəniz: {grade.result}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Grades;\r\n",{"ruleId":"74","severity":1,"message":"75","line":4,"column":20,"nodeType":"76","messageId":"77","endLine":4,"endColumn":24},{"ruleId":"74","severity":1,"message":"78","line":3,"column":10,"nodeType":"76","messageId":"77","endLine":3,"endColumn":21},{"ruleId":"74","severity":1,"message":"79","line":4,"column":10,"nodeType":"76","messageId":"77","endLine":4,"endColumn":21},{"ruleId":"74","severity":1,"message":"80","line":10,"column":10,"nodeType":"76","messageId":"77","endLine":10,"endColumn":16},{"ruleId":"81","severity":1,"message":"82","line":24,"column":37,"nodeType":"83","messageId":"84","endLine":24,"endColumn":39},{"ruleId":"81","severity":1,"message":"82","line":40,"column":39,"nodeType":"83","messageId":"84","endLine":40,"endColumn":41},{"ruleId":"85","severity":1,"message":"86","line":52,"column":4,"nodeType":"87","endLine":52,"endColumn":6,"suggestions":"88"},{"ruleId":"81","severity":1,"message":"82","line":81,"column":18,"nodeType":"83","messageId":"84","endLine":81,"endColumn":20},{"ruleId":"74","severity":1,"message":"89","line":82,"column":15,"nodeType":"76","messageId":"77","endLine":82,"endColumn":18},{"ruleId":"85","severity":1,"message":"90","line":85,"column":6,"nodeType":"87","endLine":85,"endColumn":18,"suggestions":"91"},{"ruleId":"81","severity":1,"message":"82","line":97,"column":16,"nodeType":"83","messageId":"84","endLine":97,"endColumn":18},{"ruleId":"74","severity":1,"message":"79","line":2,"column":10,"nodeType":"76","messageId":"77","endLine":2,"endColumn":21},{"ruleId":"85","severity":1,"message":"92","line":25,"column":6,"nodeType":"87","endLine":25,"endColumn":8,"suggestions":"93"},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'result' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'classs', 'searchParams', and 'utis'. Either include them or remove the dependency array.","ArrayExpression",["94"],"'res' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'searchParams' and 'utis'. Either include them or remove the dependency array.",["95"],"React Hook useEffect has a missing dependency: 'utis'. Either include it or remove the dependency array.",["96"],{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [classs, searchParams, utis]",{"range":"103","text":"104"},"Update the dependencies array to be: [searchParams, totalScore, utis]",{"range":"105","text":"106"},"Update the dependencies array to be: [utis]",{"range":"107","text":"108"},[1833,1835],"[classs, searchParams, utis]",[2962,2974],"[searchParams, totalScore, utis]",[730,732],"[utis]"]