{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\React-Apps\\\\reactapp\\\\src\\\\pages\\\\tests\\\\testsolver.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Navigate, useSearchParams } from \"react-router-dom\";\nimport \"./testsolver.css\";\nimport { useSelector } from \"react-redux\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Testsolver() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const [test, setTest] = useState();\n  const [answers, setAnswers] = useState([]);\n  const [result, setResult] = useState([]);\n  const [isworked, setworked] = useState();\n  const [submitted, setSubmitted] = useState(false);\n  const [totalScore, setTotalScore] = useState(0);\n  const classs = localStorage.getItem(\"UTIS\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/isvalid/\" + classs + \"/\" + searchParams.get(\"id\"));\n        console.log(response.status);\n        const data = await response.json();\n        if (data) {\n          setworked(data);\n          console.log(isworked);\n        }\n      } catch (error) {}\n      try {\n        const response = await fetch(\"http://localhost:8000/tests/\" + searchParams.get(\"id\"));\n        if (!response.ok) {\n          console.error(\"Error fetching data\");\n        } else {\n          const data = await response.json();\n          setTest(data);\n          setAnswers(Array(data.QUESTIONS.length).fill(null));\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleAnswerChange = (questionIndex, answerIndex) => {\n    if (!submitted) {\n      setAnswers(prevAnswers => {\n        const updatedAnswers = [...prevAnswers];\n        updatedAnswers[questionIndex] = answerIndex;\n        return updatedAnswers;\n      });\n    }\n  };\n  const handleSubmit = () => {\n    const resultArray = test.QUESTIONS.map((question, questionIndex) => {\n      const selectedAnswerIndex = answers[questionIndex];\n      const correctAnswerIndex = parseInt(question.RIGHTANSWER) - 1;\n      const isCorrect = selectedAnswerIndex === correctAnswerIndex;\n      const score = isCorrect ? question.SCORE : 0;\n      return {\n        isCorrect,\n        score\n      };\n    });\n    setResult(resultArray);\n    setTotalScore(resultArray.reduce((total, question) => total + question.score, 0));\n    setSubmitted(true);\n  };\n  if (!test && !isworked) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Loading....\"\n    }, void 0, false);\n  }\n  if (isworked) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Bu testi yerin\\u0259 yetirmisiniz.Ald\\u0131\\u011F\\u0131n\\u0131z bal :\"\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: test.TESTNAME\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Suallar:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), test.QUESTIONS.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [question.QUESTION, \" (Bal:\", question.SCORE, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"answers\",\n        children: question.ANSWERS.map((answer, answerIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `answer ${submitted ? \"disabled\" : \"\"}`,\n          onClick: () => handleAnswerChange(questionIndex, answerIndex),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: question.TYPE === \"multiAnswered\" ? \"checkbox\" : \"radio\",\n            name: `question-${questionIndex}`,\n            id: `question-${questionIndex}-answer-${answerIndex}`,\n            checked: answers[questionIndex] === answerIndex,\n            disabled: submitted,\n            onChange: () => {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `question-${questionIndex}-answer-${answerIndex}`,\n            children: answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)]\n        }, answerIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, questionIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-btn\",\n      onClick: handleSubmit,\n      disabled: submitted,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Score: \", totalScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(Testsolver, \"dgOtbDh4b6GpdMUobTFqi77DyOQ=\", false, function () {\n  return [useSearchParams];\n});\n_c = Testsolver;\nexport default Testsolver;\nvar _c;\n$RefreshReg$(_c, \"Testsolver\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","useSearchParams","useSelector","Fragment","_Fragment","jsxDEV","_jsxDEV","Testsolver","_s","searchParams","test","setTest","answers","setAnswers","result","setResult","isworked","setworked","submitted","setSubmitted","totalScore","setTotalScore","classs","localStorage","getItem","fetchData","response","fetch","get","console","log","status","data","json","error","ok","Array","QUESTIONS","length","fill","handleAnswerChange","questionIndex","answerIndex","prevAnswers","updatedAnswers","handleSubmit","resultArray","map","question","selectedAnswerIndex","correctAnswerIndex","parseInt","RIGHTANSWER","isCorrect","score","SCORE","reduce","total","children","className","TESTNAME","fileName","_jsxFileName","lineNumber","columnNumber","QUESTION","ANSWERS","answer","onClick","type","TYPE","name","id","checked","disabled","onChange","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/React-Apps/reactapp/src/pages/tests/testsolver.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Navigate, useSearchParams } from \"react-router-dom\";\r\nimport \"./testsolver.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Testsolver() {\r\n  const [searchParams] = useSearchParams();\r\n  const [test, setTest] = useState();\r\n  const [answers, setAnswers] = useState([]);\r\n  const [result, setResult] = useState([]);\r\n  const [isworked,setworked] = useState()\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [totalScore, setTotalScore] = useState(0);\r\n  const classs = localStorage.getItem(\"UTIS\")\r\n  useEffect(() => {\r\n      const fetchData = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                \"http://localhost:8000/isvalid/\"+classs+\"/\"+ searchParams.get(\"id\")\r\n                );\r\n                console.log(response.status)\r\n                const data =await response.json()\r\n                if (data ) {\r\n                    setworked(data)      \r\n                    console.log(isworked)      \r\n                }\r\n            } \r\n            catch(error){}\r\n          try {\r\n              const response = await fetch(\r\n                  \"http://localhost:8000/tests/\" + searchParams.get(\"id\")\r\n                  );\r\n                  if (!response.ok) {\r\n                      console.error(\"Error fetching data\");\r\n                        } else {\r\n            const data = await response.json();\r\n            setTest(data);\r\n            setAnswers(Array(data.QUESTIONS.length).fill(null));\r\n            }\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n};\r\n\r\nfetchData();\r\n}, []);\r\n\r\n  const handleAnswerChange = (questionIndex, answerIndex) => {\r\n    if (!submitted) {\r\n      setAnswers((prevAnswers) => {\r\n        const updatedAnswers = [...prevAnswers];\r\n        updatedAnswers[questionIndex] = answerIndex;\r\n        return updatedAnswers;\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const resultArray = test.QUESTIONS.map((question, questionIndex) => {\r\n      const selectedAnswerIndex = answers[questionIndex];\r\n      const correctAnswerIndex = parseInt(question.RIGHTANSWER) - 1;\r\n      const isCorrect = selectedAnswerIndex === correctAnswerIndex;\r\n      const score = isCorrect ? question.SCORE : 0;\r\n      return { isCorrect, score };\r\n    });\r\n    setResult(resultArray);\r\n    setTotalScore(resultArray.reduce((total, question) => total + question.score, 0));\r\n    setSubmitted(true);\r\n  };\r\n\r\n  if (!test && !isworked) {\r\n    return <>Loading....</>;\r\n  }\r\n  if (isworked) {\r\n    return <>Bu testi yerinə yetirmisiniz.Aldığınız bal :</>;\r\n  }\r\n    return (\r\n    <div className=\"container\">\r\n      <h2>{test.TESTNAME}</h2>\r\n      <h3>Suallar:</h3>\r\n\r\n      {test.QUESTIONS.map((question, questionIndex) => (\r\n        <div key={questionIndex} className=\"question\">\r\n          <p>{question.QUESTION} (Bal:{question.SCORE})</p>\r\n          <ul className=\"answers\">\r\n            {question.ANSWERS.map((answer, answerIndex) => (\r\n              <li\r\n                key={answerIndex}\r\n                className={`answer ${submitted ? \"disabled\" : \"\"}`}\r\n                onClick={() => handleAnswerChange(questionIndex, answerIndex)}\r\n              >\r\n                <input\r\n                  type={question.TYPE === \"multiAnswered\" ? \"checkbox\" : \"radio\"}\r\n                  name={`question-${questionIndex}`}\r\n                  id={`question-${questionIndex}-answer-${answerIndex}`}\r\n                  checked={answers[questionIndex] === answerIndex}\r\n                  disabled={submitted}\r\n                  onChange={() => {}}\r\n                />\r\n                <label htmlFor={`question-${questionIndex}-answer-${answerIndex}`}>\r\n                  {answer}\r\n                </label>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ))}\r\n\r\n      <button className=\"submit-btn\" onClick={handleSubmit} disabled={submitted}>\r\n        Submit\r\n      </button>\r\n\r\n      {submitted && (\r\n        <div className=\"feedback\">\r\n          <p>Total Score: {totalScore}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Testsolver;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}