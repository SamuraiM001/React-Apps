{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\React-Apps\\\\reactapp\\\\src\\\\pages\\\\tests\\\\testsolver.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport \"./testsolver.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Testsolver() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const [test, setTest] = useState();\n  const [answers, setAnswers] = useState([]);\n  const [result, setResult] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/tests/\" + searchParams.get(\"id\"));\n        if (!response.ok) {\n          console.error(\"Error fetching data\");\n        } else {\n          const data = await response.json();\n          setTest(data);\n          setAnswers(Array(data.QUESTIONS.length).fill(null));\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleAnswerChange = (questionIndex, answerIndex) => {\n    setAnswers(prevAnswers => {\n      const updatedAnswers = [...prevAnswers];\n      updatedAnswers[questionIndex] = answerIndex;\n      return updatedAnswers;\n    });\n  };\n  const handleSubmit = () => {\n    const resultArray = test.QUESTIONS.map((question, questionIndex) => {\n      const selectedAnswerIndex = answers[questionIndex];\n      const correctAnswerIndex = parseInt(question.RIGHTANSWER) - 1;\n      const isCorrect = selectedAnswerIndex === correctAnswerIndex;\n      const score = isCorrect ? question.SCORE : 0;\n      return {\n        isCorrect,\n        score\n      };\n    });\n    setResult(resultArray);\n  };\n  if (!test) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Loading....\"\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: test.TESTNAME\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Class: \", test.CLASS]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Questions:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), test.QUESTIONS.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.QUESTION\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"answers\",\n        children: question.ANSWERS.map((answer, answerIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"answer\",\n          onClick: () => handleAnswerChange(questionIndex, answerIndex),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: `question-${questionIndex}`,\n            id: `question-${questionIndex}-answer-${answerIndex}`,\n            checked: answers[questionIndex] === answerIndex,\n            onChange: () => {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `question-${questionIndex}-answer-${answerIndex}`,\n            children: answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)]\n        }, answerIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, questionIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-btn\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), result.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: result.map((questionResult, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Question \", index + 1, \": \", questionResult.isCorrect ? \"Correct\" : \"Incorrect\", questionResult.isCorrect && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" (Score: \", questionResult.score, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 46\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Score: \", result.reduce((total, question) => total + question.score, 0)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(Testsolver, \"LhMXyAl90waNqV3hUGmmj4hVOvs=\", false, function () {\n  return [useSearchParams];\n});\n_c = Testsolver;\nexport default Testsolver;\nvar _c;\n$RefreshReg$(_c, \"Testsolver\");","map":{"version":3,"names":["React","useEffect","useState","useSearchParams","Fragment","_Fragment","jsxDEV","_jsxDEV","Testsolver","_s","searchParams","test","setTest","answers","setAnswers","result","setResult","fetchData","response","fetch","get","ok","console","error","data","json","Array","QUESTIONS","length","fill","handleAnswerChange","questionIndex","answerIndex","prevAnswers","updatedAnswers","handleSubmit","resultArray","map","question","selectedAnswerIndex","correctAnswerIndex","parseInt","RIGHTANSWER","isCorrect","score","SCORE","children","className","TESTNAME","fileName","_jsxFileName","lineNumber","columnNumber","CLASS","QUESTION","ANSWERS","answer","onClick","type","name","id","checked","onChange","htmlFor","questionResult","index","reduce","total","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/React-Apps/reactapp/src/pages/tests/testsolver.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport \"./testsolver.css\";\r\n\r\nfunction Testsolver() {\r\n  const [searchParams] = useSearchParams();\r\n  const [test, setTest] = useState();\r\n  const [answers, setAnswers] = useState([]);\r\n  const [result, setResult] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"http://localhost:8000/tests/\" + searchParams.get(\"id\")\r\n        );\r\n        if (!response.ok) {\r\n          console.error(\"Error fetching data\");\r\n        } else {\r\n          const data = await response.json();\r\n          setTest(data);\r\n          setAnswers(Array(data.QUESTIONS.length).fill(null));\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleAnswerChange = (questionIndex, answerIndex) => {\r\n    setAnswers((prevAnswers) => {\r\n      const updatedAnswers = [...prevAnswers];\r\n      updatedAnswers[questionIndex] = answerIndex;\r\n      return updatedAnswers;\r\n    });\r\n  };\r\n  const handleSubmit = () => {\r\n    const resultArray = test.QUESTIONS.map((question, questionIndex) => {\r\n      const selectedAnswerIndex = answers[questionIndex];\r\n      const correctAnswerIndex = parseInt(question.RIGHTANSWER) - 1;\r\n      const isCorrect = selectedAnswerIndex === correctAnswerIndex;\r\n      const score = isCorrect ? question.SCORE : 0;\r\n      return { isCorrect, score };\r\n    });\r\n    setResult(resultArray);\r\n  };\r\n  \r\n\r\n  if (!test) {\r\n    return <>Loading....</>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>{test.TESTNAME}</h2>\r\n      <p>Class: {test.CLASS}</p>\r\n      <h3>Questions:</h3>\r\n\r\n      {test.QUESTIONS.map((question, questionIndex) => (\r\n        <div key={questionIndex} className=\"question\">\r\n          <p>{question.QUESTION}</p>\r\n          <ul className=\"answers\">\r\n            {question.ANSWERS.map((answer, answerIndex) => (\r\n              <li\r\n                key={answerIndex}\r\n                className=\"answer\"\r\n                onClick={() => handleAnswerChange(questionIndex, answerIndex)}\r\n              >\r\n                <input\r\n                  type=\"radio\"\r\n                  name={`question-${questionIndex}`}\r\n                  id={`question-${questionIndex}-answer-${answerIndex}`}\r\n                  checked={answers[questionIndex] === answerIndex}\r\n                  onChange={() => {}}\r\n                />\r\n                <label htmlFor={`question-${questionIndex}-answer-${answerIndex}`}>\r\n                  {answer}\r\n                </label>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ))}\r\n\r\n      <button className=\"submit-btn\" onClick={handleSubmit}>\r\n        Submit\r\n      </button>\r\n\r\n      {result.length > 0 && (\r\n        <div className=\"feedback\">\r\n            <h3>Result:</h3>\r\n            <ul>\r\n            {result.map((questionResult, index) => (\r\n                <li key={index}>\r\n                Question {index + 1}: {questionResult.isCorrect ? \"Correct\" : \"Incorrect\"}\r\n                {questionResult.isCorrect && <span> (Score: {questionResult.score})</span>}\r\n                </li>\r\n            ))}\r\n            </ul>\r\n            <p>Total Score: {result.reduce((total, question) => total + question.score, 0)}</p>\r\n        </div>\r\n        )}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Testsolver;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}