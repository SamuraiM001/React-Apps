{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\React-Apps\\\\reactapp\\\\src\\\\pages\\\\tests\\\\testsolver.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Navigate, useSearchParams } from \"react-router-dom\";\nimport \"./testsolver.css\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Testsolver() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const [test, setTest] = useState();\n  const [answers, setAnswers] = useState([]);\n  const [result, setResult] = useState([]);\n  const [isworked, setworked] = useState();\n  const [submitted, setSubmitted] = useState(false);\n  const [totalScore, setTotalScore] = useState(0);\n  const utis = localStorage.getItem(\"UTIS\");\n  const classs = useSelector(state => state.class.class);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/isvalid/\" + utis + \"/\" + searchParams.get(\"id\"));\n        console.log(response.status);\n        if (response.status != 201) {\n          const data = await response.json();\n          setworked(data);\n          console.log(isworked);\n        }\n      } catch (error) {}\n      try {\n        const response = await fetch(\"http://localhost:8000/tests/\" + searchParams.get(\"id\"));\n        if (!response.ok) {\n          console.error(\"Error fetching data\");\n        } else {\n          const data = await response.json();\n          setTest(data);\n          setAnswers(Array(data.QUESTIONS.length).fill(null));\n          console.log(data.CLASS);\n          console.log(CLASS);\n          if (data.CLASS != classs) return /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 54\n          }, this);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleAnswerChange = (questionIndex, answerIndex) => {\n    if (!submitted) {\n      setAnswers(prevAnswers => {\n        const updatedAnswers = [...prevAnswers];\n        updatedAnswers[questionIndex] = answerIndex;\n        return updatedAnswers;\n      });\n    }\n  };\n  const handleSubmit = () => {\n    const resultArray = test.QUESTIONS.map((question, questionIndex) => {\n      const selectedAnswerIndex = answers[questionIndex];\n      const correctAnswerIndex = parseInt(question.RIGHTANSWER) - 1;\n      const isCorrect = selectedAnswerIndex === correctAnswerIndex;\n      const score = isCorrect ? question.SCORE : 0;\n      return {\n        isCorrect,\n        score\n      };\n    });\n    setResult(resultArray);\n    setTotalScore(resultArray.reduce((total, question) => total + question.score, 0));\n    setSubmitted(true);\n  };\n  if (!test && !isworked) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Loading....\"\n    }, void 0, false);\n  }\n  if (isworked) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"Bu testi yerin\\u0259 yetirmisiniz.Ald\\u0131\\u011F\\u0131n\\u0131z bal : \", isworked]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: test.TESTNAME\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Suallar:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), test.QUESTIONS.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [question.QUESTION, \" (Bal:\", question.SCORE, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"answers\",\n        children: question.ANSWERS.map((answer, answerIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `answer ${submitted ? \"disabled\" : \"\"}`,\n          onClick: () => handleAnswerChange(questionIndex, answerIndex),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: question.TYPE === \"multiAnswered\" ? \"checkbox\" : \"radio\",\n            name: `question-${questionIndex}`,\n            id: `question-${questionIndex}-answer-${answerIndex}`,\n            checked: answers[questionIndex] === answerIndex,\n            disabled: submitted,\n            onChange: () => {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `question-${questionIndex}-answer-${answerIndex}`,\n            children: answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)]\n        }, answerIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, questionIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-btn\",\n      onClick: handleSubmit,\n      disabled: submitted,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Score: \", totalScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(Testsolver, \"NBAGUimJJE6e/CRzdX+oLz2C9cE=\", false, function () {\n  return [useSearchParams, useSelector];\n});\n_c = Testsolver;\nexport default Testsolver;\nvar _c;\n$RefreshReg$(_c, \"Testsolver\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","useSearchParams","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","Testsolver","_s","searchParams","test","setTest","answers","setAnswers","result","setResult","isworked","setworked","submitted","setSubmitted","totalScore","setTotalScore","utis","localStorage","getItem","classs","state","class","fetchData","response","fetch","get","console","log","status","data","json","error","ok","Array","QUESTIONS","length","fill","CLASS","to","fileName","_jsxFileName","lineNumber","columnNumber","handleAnswerChange","questionIndex","answerIndex","prevAnswers","updatedAnswers","handleSubmit","resultArray","map","question","selectedAnswerIndex","correctAnswerIndex","parseInt","RIGHTANSWER","isCorrect","score","SCORE","reduce","total","children","className","TESTNAME","QUESTION","ANSWERS","answer","onClick","type","TYPE","name","id","checked","disabled","onChange","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/React-Apps/reactapp/src/pages/tests/testsolver.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Navigate, useSearchParams } from \"react-router-dom\";\r\nimport \"./testsolver.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Testsolver() {\r\n  const [searchParams] = useSearchParams();\r\n  const [test, setTest] = useState();\r\n  const [answers, setAnswers] = useState([]);\r\n  const [result, setResult] = useState([]);\r\n  const [isworked,setworked] = useState()\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [totalScore, setTotalScore] = useState(0);\r\n  const utis = localStorage.getItem(\"UTIS\")\r\n  const classs = useSelector(state=>state.class.class)\r\n  useEffect(() => {\r\n      const fetchData = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                \"http://localhost:8000/isvalid/\"+utis+\"/\"+ searchParams.get(\"id\")\r\n                );\r\n                console.log(response.status)\r\n                if (response.status != 201) {\r\n                    const data =await response.json()\r\n                    setworked(data)      \r\n                    console.log(isworked)      \r\n                }\r\n            } \r\n            catch(error){}\r\n          try {\r\n              const response = await fetch(\r\n                  \"http://localhost:8000/tests/\" + searchParams.get(\"id\")\r\n                  );\r\n                  if (!response.ok) {\r\n                      console.error(\"Error fetching data\");\r\n                    } else {\r\n                        const data = await response.json();\r\n                        setTest(data);\r\n                        setAnswers(Array(data.QUESTIONS.length).fill(null));\r\n                        console.log(data.CLASS)\r\n                        console.log(CLASS)\r\n                        if(data.CLASS!=classs)return <Navigate to=\"/\"/>\r\n            }\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n};\r\n\r\nfetchData();\r\n}, []);\r\n\r\n  const handleAnswerChange = (questionIndex, answerIndex) => {\r\n    if (!submitted) {\r\n      setAnswers((prevAnswers) => {\r\n        const updatedAnswers = [...prevAnswers];\r\n        updatedAnswers[questionIndex] = answerIndex;\r\n        return updatedAnswers;\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const resultArray = test.QUESTIONS.map((question, questionIndex) => {\r\n      const selectedAnswerIndex = answers[questionIndex];\r\n      const correctAnswerIndex = parseInt(question.RIGHTANSWER) - 1;\r\n      const isCorrect = selectedAnswerIndex === correctAnswerIndex;\r\n      const score = isCorrect ? question.SCORE : 0;\r\n      return { isCorrect, score };\r\n    });\r\n    setResult(resultArray);\r\n    setTotalScore(resultArray.reduce((total, question) => total + question.score, 0));\r\n    setSubmitted(true);\r\n  };\r\n\r\n  if (!test && !isworked) {\r\n    return <>Loading....</>;\r\n  }\r\n  if (isworked) {\r\n    return <>Bu testi yerinə yetirmisiniz.Aldığınız bal : {isworked}</>;\r\n  }\r\n    return (\r\n    <div className=\"container\">\r\n      <h2>{test.TESTNAME}</h2>\r\n      <h3>Suallar:</h3>\r\n\r\n      {test.QUESTIONS.map((question, questionIndex) => (\r\n        <div key={questionIndex} className=\"question\">\r\n          <p>{question.QUESTION} (Bal:{question.SCORE})</p>\r\n          <ul className=\"answers\">\r\n            {question.ANSWERS.map((answer, answerIndex) => (\r\n              <li\r\n                key={answerIndex}\r\n                className={`answer ${submitted ? \"disabled\" : \"\"}`}\r\n                onClick={() => handleAnswerChange(questionIndex, answerIndex)}\r\n              >\r\n                <input\r\n                  type={question.TYPE === \"multiAnswered\" ? \"checkbox\" : \"radio\"}\r\n                  name={`question-${questionIndex}`}\r\n                  id={`question-${questionIndex}-answer-${answerIndex}`}\r\n                  checked={answers[questionIndex] === answerIndex}\r\n                  disabled={submitted}\r\n                  onChange={() => {}}\r\n                />\r\n                <label htmlFor={`question-${questionIndex}-answer-${answerIndex}`}>\r\n                  {answer}\r\n                </label>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ))}\r\n\r\n      <button className=\"submit-btn\" onClick={handleSubmit} disabled={submitted}>\r\n        Submit\r\n      </button>\r\n\r\n      {submitted && (\r\n        <div className=\"feedback\">\r\n          <p>Total Score: {totalScore}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Testsolver;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}