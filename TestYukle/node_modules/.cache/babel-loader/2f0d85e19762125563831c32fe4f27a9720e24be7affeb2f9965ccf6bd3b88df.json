{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\React-Apps\\\\reactapp\\\\src\\\\pages\\\\tests\\\\testsolver.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Testsolver() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const [test, setTest] = useState();\n  useEffect(async () => {\n    const response = fetch(\"http://localhost:8000/tests/0\");\n    const data = response.json();\n    console.log(data);\n    setTest(data);\n  }, []);\n  if (!test) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Loading....\"\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: test.TESTNAME\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Class: \", test.CLASS]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Questions:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), test.QUESTIONS.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.QUESTION\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: question.ANSWERS.map((answer, answerIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: answer\n        }, answerIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Testsolver, \"Qen5HNaSbhi4wE/LIS/2RZgZ9J4=\", false, function () {\n  return [useSearchParams];\n});\n_c = Testsolver;\nexport default Testsolver;\nvar _c;\n$RefreshReg$(_c, \"Testsolver\");","map":{"version":3,"names":["React","useEffect","useState","useSearchParams","Fragment","_Fragment","jsxDEV","_jsxDEV","Testsolver","_s","searchParams","test","setTest","response","fetch","data","json","console","log","children","TESTNAME","fileName","_jsxFileName","lineNumber","columnNumber","CLASS","QUESTIONS","map","question","index","QUESTION","ANSWERS","answer","answerIndex","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/React-Apps/reactapp/src/pages/tests/testsolver.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nfunction Testsolver() {\r\n    const [searchParams] = useSearchParams()\r\n    const [test,setTest] = useState()\r\n    useEffect(async()=>{\r\n        const response = fetch(\"http://localhost:8000/tests/0\")\r\n        const data = response.json()\r\n        console.log(data)\r\n        setTest(data)\r\n    },[])\r\n\r\n    if(!test){\r\n     return <>Loading....</>\r\n    }\r\n  return (\r\n    <div>\r\n      <h2>{test.TESTNAME}</h2>\r\n      <p>Class: {test.CLASS}</p>\r\n      <h3>Questions:</h3>\r\n      {test.QUESTIONS.map((question, index) => (\r\n        <div key={index}>\r\n          <p>{question.QUESTION}</p>\r\n          <ul>\r\n            {question.ANSWERS.map((answer, answerIndex) => (\r\n              <li key={answerIndex}>{answer}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Testsolver;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,kBAAkB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,YAAY,CAAC,GAAGP,eAAe,CAAC,CAAC;EACxC,MAAM,CAACQ,IAAI,EAACC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC;EACjCD,SAAS,CAAC,YAAS;IACf,MAAMY,QAAQ,GAAGC,KAAK,CAAC,+BAA+B,CAAC;IACvD,MAAMC,IAAI,GAAGF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC5BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjBH,OAAO,CAACG,IAAI,CAAC;EACjB,CAAC,EAAC,EAAE,CAAC;EAEL,IAAG,CAACJ,IAAI,EAAC;IACR,oBAAOJ,OAAA,CAAAF,SAAA;MAAAc,QAAA,EAAE;IAAW,gBAAE,CAAC;EACxB;EACF,oBACEZ,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAKR,IAAI,CAACS;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBjB,OAAA;MAAAY,QAAA,GAAG,SAAO,EAACR,IAAI,CAACc,KAAK;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BjB,OAAA;MAAAY,QAAA,EAAI;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBb,IAAI,CAACe,SAAS,CAACC,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAClCtB,OAAA;MAAAY,QAAA,gBACEZ,OAAA;QAAAY,QAAA,EAAIS,QAAQ,CAACE;MAAQ;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BjB,OAAA;QAAAY,QAAA,EACGS,QAAQ,CAACG,OAAO,CAACJ,GAAG,CAAC,CAACK,MAAM,EAAEC,WAAW,kBACxC1B,OAAA;UAAAY,QAAA,EAAuBa;QAAM,GAApBC,WAAW;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CACnC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA,GANGK,KAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACf,EAAA,CA9BQD,UAAU;EAAA,QACQL,eAAe;AAAA;AAAA+B,EAAA,GADjC1B,UAAU;AAgCnB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}