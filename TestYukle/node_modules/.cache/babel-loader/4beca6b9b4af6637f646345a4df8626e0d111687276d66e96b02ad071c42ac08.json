{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\React-Apps\\\\TestYukle\\\\src\\\\pages\\\\tests\\\\tests.js\",\n  _s = $RefreshSig$();\nimport { Link, Navigate, createSearchParams } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./tests.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Tests() {\n  _s();\n  const [tests, setTests] = useState([]);\n  const loggedIn = useSelector(state => state.login);\n  const userClass = useSelector(state => state.class.name);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/tests\");\n      if (!response.ok) {\n        console.error(\"Error fetching data\");\n      } else {\n        const data = await response.json();\n        setTests(data);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  if (!loggedIn) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 25\n  }, this);\n  if (loggedIn === \"TEACHER\") return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 38\n  }, this);\n  if (!tests) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Z\\u0259hm\\u0259t Olmasa G\\xF6zl\\u0259yin\"\n  }, void 0, false);\n  const filteredTests = tests.filter(test => test.Author === userClass);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: filteredTests.map(test => /*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: \"/testsolver\",\n          search: createSearchParams({\n            id: test.id\n          }).toString()\n        },\n        className: \"card-button\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: test.TESTNAME\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: test.CLASS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, test.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Tests, \"ZP+CbphXBGIZO88tfeeD3qqNOfM=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = Tests;\nexport default Tests;\nvar _c;\n$RefreshReg$(_c, \"Tests\");","map":{"version":3,"names":["Link","Navigate","createSearchParams","React","useEffect","useState","useDispatch","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","Tests","_s","tests","setTests","loggedIn","state","login","userClass","class","name","fetchData","response","fetch","ok","console","error","data","json","to","fileName","_jsxFileName","lineNumber","columnNumber","children","filteredTests","filter","test","Author","className","map","pathname","search","id","toString","TESTNAME","CLASS","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/React-Apps/TestYukle/src/pages/tests/tests.js"],"sourcesContent":["import { Link, Navigate, createSearchParams } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./tests.css\";\r\n\r\nfunction Tests() {\r\n  const [tests, setTests] = useState([]);\r\n  const loggedIn = useSelector((state) => state.login);\r\n  const userClass = useSelector((state) => state.class.name);\r\n  \r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/tests\");\r\n      if (!response.ok) {\r\n        console.error(\"Error fetching data\");\r\n      } else {\r\n        const data = await response.json();\r\n        setTests(data);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  if (!loggedIn) return <Navigate to=\"/\" />;\r\n  if (loggedIn === \"TEACHER\") return <Navigate to=\"/\" />;\r\n  if (!tests) return <>Zəhmət Olmasa Gözləyin</>;\r\n\r\n  const filteredTests = tests.filter((test) => test.Author === userClass);\r\n\r\n  return (\r\n    <div className=\"grid-container\">\r\n      <div className=\"grid\">\r\n        {filteredTests.map((test) => (\r\n          <Link\r\n            key={test.id}\r\n            to={{\r\n              pathname: \"/testsolver\",\r\n              search: createSearchParams({\r\n                id: test.id,\r\n              }).toString(),\r\n            }}\r\n            className=\"card-button\"\r\n          >\r\n            <div className=\"card-content\">\r\n              <h3>{test.TESTNAME}</h3>\r\n              <p>{test.CLASS}</p>\r\n            </div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tests;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}